{"version":3,"sources":["App.js","index.js"],"names":["colors","Wrapper","tw","div","Deck","Card","Profile","img","Details","Data","Span","Button","button","Alert","p","App","useState","user","setUser","color","setColor","alert","setAlert","usefetch","a","fetch","response","json","data","results","cell","email","gender","image","picture","large","name","first","last","dob","date","location","city","state","newUser","Math","floor","random","useEffect","timeout","setTimeout","clearTimeout","className","src","alt","Object","entries","map","entry","index","title","onClick","navigator","clipboard","writeText","slice","toUpperCase","split","reverse","join","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"mRAGMA,EAAS,CACb,OACA,SACA,SACA,OACA,QACA,SACA,MACA,QAGIC,EAAUC,IAAGC,IAAN,0EAKPC,EAAOF,IAAGC,IAAN,iFAKJE,EAAOH,IAAGC,IAAN,0FAQJG,EAAUJ,IAAGK,IAAN,sIAMPC,EAAUN,IAAGC,IAAN,4EAKPM,EAAOP,IAAGC,IAAN,8CAIJO,EAAOR,IAAGC,IAAN,kEAMJQ,EAAST,IAAGU,OAAN,oHAQNC,EAAQX,IAAGY,EAAN,kGA2GIC,EAhGH,WACV,MAAwBC,mBAAS,MAAjC,mBAAOC,EAAP,KAAaC,EAAb,KACA,EAA0BF,mBAAS,QAAnC,mBAAOG,EAAP,KAAcC,EAAd,KACA,EAA0BJ,oBAAS,GAAnC,mBAAOK,EAAP,KAAcC,EAAd,KAEMC,EAAQ,uCAAG,wDAAAC,EAAA,sEACQC,MARf,wCAOO,cACTC,EADS,gBAEIA,EAASC,OAFb,OAETC,EAFS,OAGTX,EAAOW,EAAKC,QAAQ,GAClBC,EAAwBb,EAAxBa,KAAMC,EAAkBd,EAAlBc,MAAOC,EAAWf,EAAXe,OACNC,EAAUhB,EAAKiB,QAAtBC,MALO,EAMSlB,EAAKmB,KAArBC,EANO,EAMPA,MAAOC,EANA,EAMAA,KACDC,EAAQtB,EAAKsB,IAAnBC,KAPO,EAUXvB,EADFwB,SAAYC,EATC,EASDA,KAAMC,EATL,EASKA,MAGdC,EAAU,CACdX,QACAG,KAAK,GAAD,OAAKC,EAAL,YAAcC,GAClBC,MACAP,SACAU,OACAC,QACAb,OACAC,SAEFb,EAAQ0B,GACRxB,EAASpB,EAAO6C,KAAKC,MAAsB,EAAhBD,KAAKE,YAvBjB,4CAAH,qDAsCd,OAZAC,qBAAU,WACRzB,MACC,IAEHyB,qBAAU,WACR,IAAMC,EAAUC,YAAW,WACzB5B,GAAS,KACT,KAEF,OAAO,kBAAM6B,aAAaF,MAC1B,CAAC5B,IAGD,eAACpB,EAAD,CAASmD,UAAS,aAAQjC,EAAR,QAAlB,UACGE,GAAS,cAACR,EAAD,kCACV,eAACT,EAAD,WACE,eAACC,EAAD,CAAM+C,UAAS,aAAQjC,EAAR,QAAf,UACE,cAACb,EAAD,CAAS+C,IAAKpC,GAAQA,EAAKgB,MAAOqB,IAAI,YACtC,cAAC9C,EAAD,UACGS,GACCsC,OAAOC,QAAQvC,GAAMwC,KAAI,SAACC,EAAOC,GAC/B,OAAc,IAAVA,EAEA,eAAClD,EAAD,CAEEmD,MAAM,gBACNC,QAAS,WACPvC,GAAS,GACTwC,UAAUC,UAAUC,UAAUN,EAAM,KALxC,UASE,cAAChD,EAAD,UACa,IAAViD,EACG,QACAD,EAAM,GAAGO,MAAM,EAAG,GAAGC,cACrBR,EAAM,GAAGO,MAAM,KAbvB,IAeI,IACS,IAAVN,EACGD,EAAM,GAAGO,MAAM,EAAG,IAAIE,MAAM,KAAKC,UAAUC,KAAK,KACtC,IAAVV,EACAD,EAAM,GACNA,EAAM,GAAGO,MAAM,EAAG,GAAGC,cACrBR,EAAM,GAAGO,MAAM,KApBdN,GAwBJ,aAIf,cAAChD,EAAD,CACEyC,UAAS,eAAUjC,EAAV,QACT0C,QAAS,WACPtC,KAHJ,yBCtJR+C,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.7986332b.chunk.js","sourcesContent":["import tw from \"tailwind-styled-components\";\nimport { useEffect, useState } from \"react\";\n\nconst colors = [\n  \"pink\",\n  \"purple\",\n  \"indigo\",\n  \"blue\",\n  \"green\",\n  \"yellow\",\n  \"red\",\n  \"gray\",\n];\n\nconst Wrapper = tw.div`\n  h-full\n  flex justify-center items-center\n`;\n\nconst Deck = tw.div`\n  flex flex-col justify-center items-center\n  z-10\n`;\n\nconst Card = tw.div`\n  max-w-sm\n  min-h-60\n  w-11/12\n  rounded-lg\n  shadow-xl\n`;\n\nconst Profile = tw.img`\n  w-24 h-24 bg-white rounded-full\n  absolute inset-x-1/2\n  transform -translate-x-1/2 -translate-y-1/2\n`;\n\nconst Details = tw.div`\n  mt-16 text-white px-12 py-5\n  leading-loose\n`;\n\nconst Data = tw.div`\n  cursor-pointer\n`;\n\nconst Span = tw.div`\n  font-bold\n  inline-block\n  w-2/5\n`;\n\nconst Button = tw.button`\n  bg-white px-6 py-2\n  self-end\n  transform translate-y-8\n  font-bold\n  rounded-lg\n`;\n\nconst Alert = tw.p`\n  bg-white\n  px-6\n  py-4\n  font-bold\n  text-4xl\n  fixed inset-0\n`\n\nconst URL = \"https://randomuser.me/api/?results=1\";\n\nconst App = () => {\n  const [user, setUser] = useState(null);\n  const [color, setColor] = useState(\"blue\");\n  const [alert, setAlert] = useState(false)\n\n  const usefetch = async () => {\n    const response = await fetch(URL);\n    const data = await response.json();\n    const user = data.results[0];\n    const { cell, email, gender } = user;\n    const { large: image } = user.picture;\n    const { first, last } = user.name;\n    const { date: dob } = user.dob;\n    const {\n      location: { city, state },\n    } = user;\n\n    const newUser = {\n      image,\n      name: `${first} ${last}`,\n      dob,\n      gender,\n      city,\n      state,\n      cell,\n      email,\n    };\n    setUser(newUser);\n    setColor(colors[Math.floor(Math.random() * 8)]);\n  };\n\n  useEffect(() => {\n    usefetch();\n  }, []);\n\n  useEffect(() => {\n    const timeout = setTimeout(() => {\n      setAlert(false)\n    },500)\n\n    return () => clearTimeout(timeout)\n  },[alert])\n\n  return (\n    <Wrapper className={`bg-${color}-800`}>\n      {alert && <Alert>Copied to clipboard</Alert>}\n      <Deck>\n        <Card className={`bg-${color}-600`}>\n          <Profile src={user && user.image} alt=\"Profile\" />\n          <Details>\n            {user &&\n              Object.entries(user).map((entry, index) => {\n                if (index !== 0) {\n                  return (\n                    <Data\n                      key={index}\n                      title=\"Click to copy\"\n                      onClick={() => {\n                        setAlert(true);\n                        navigator.clipboard.writeText(entry[1]);\n\n                      }}\n                    >\n                      <Span>\n                        {index === 2\n                          ? \"D.o.B\"\n                          : entry[0].slice(0, 1).toUpperCase() +\n                            entry[0].slice(1)}\n                      </Span>\n                      :{\" \"}\n                      {index === 2\n                        ? entry[1].slice(0, 10).split(\"-\").reverse().join(\"-\")\n                        : index === 7\n                        ? entry[1]\n                        : entry[1].slice(0, 1).toUpperCase() +\n                          entry[1].slice(1)}\n                    </Data>\n                  );\n                }\n                return null;\n              })}\n          </Details>\n        </Card>\n        <Button\n          className={`text-${color}-600`}\n          onClick={() => {\n            usefetch();\n          }}\n        >\n          Next\n        </Button>\n      </Deck>\n    </Wrapper>\n  );\n};\n\nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);"],"sourceRoot":""}